- name: Pretasks
  hosts: localhost
  gather_facts: true
  pre_tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ./roles/rpi4_coreos/vars/main.yaml
  tasks:
    - name: Ask for device to be inserted
      ansible.builtin.pause:
        prompt: |
          "Insert the microsd card and press enter"
        echo: false
      when: "(rpi4_coreos_provision_disk not in ansible_devices) | bool"
- name: Provision CoreOS on Raspberry Pi 4
  hosts: localhost
  gather_facts: false
  pre_tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ./roles/rpi4_coreos/vars/main.yaml
  roles:
    - role: rpi4_coreos
      when: "(rpi4_coreos_provision_disk in ansible_devices) | bool"
      vars:
        rpi4_coreos_provision_disk: "sdb"
        rpi4_coreos_ssh_path: '~/.ssh/id_ed25519.pub'
- name: Provision CoreOS on Raspberry Pi 4
  hosts: picoreos_hosts:dynamically_created_hosts
  gather_facts: false
  remote_user: core
  pre_tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ./roles/rpi4_coreos/vars/main.yaml
  roles:
    - role: req_install
      # vars:
      #   ansible_become_pass: !vault |
      #     $ANSIBLE_VAULT;1.1;AES256
      #     32336132316137343039323066383261346363653039643037323332623064393964663739613365
      #     3430643662343030666662333937646633643561393933620a623337646334626335623464343532
      #     30383733303137646264353936323632313636333866376238623962656639383732386138633466
      #     6239383537316262300a326439653764643539383832636238373164313464306331663230383537
      #     6361
- name: Harden server
  hosts: picoreos_hosts:dynamically_created_hosts
  remote_user: core
  become: true
  become_method: sudo
  gather_facts: true
  roles:
    # - role: devsec.hardening.os_hardening
    #   vars:
    #     os_auditd_enabled: false
    #     os_immutable_fs: true
    #     os_ignore_users:
    #       - os_ignore_users
    #       - 'adm'
    #       - 'avahi-autoipd'
    #       - 'bin'
    #       - 'ceph'
    #       - 'chrony'
    #       - 'cockpit-ws'
    #       - 'daemon'
    #       - 'dbus'
    #       - 'dockerroot'
    #       - 'etcd'
    #       - 'ftp'
    #       - 'games'
    #       - 'kube'
    #       - 'lp'
    #       - 'mail'
    #       - 'nobody'
    #       - 'operator'
    #       - 'polkitd'
    #       - 'rpc'
    #       - 'rpcuser'
    #       - 'sshd'
    #       - 'sssd'
    #       - 'systemd-bus-proxy'
    #       - 'systemd-network'
    #       - 'systemd-resolve'
    #       - 'systemd-timesync'
    #       - 'tcpdump'
    #       - 'tss'
    #       - 'clevis'
    #       - 'dnsmasq'
    #       - 'zincati'
    #       - 'systemd-coredump'
    #       - 'systemd-oom'
    #       - 'usbmuxd'
        # ansible_become_pass: !vault |
        #   $ANSIBLE_VAULT;1.1;AES256
        #   33653166616232343661613064353065313564613465333262373866643666613065326264306662
        #   3663613134613038356532333861353032633238653430650a393164383264333962393266376235
        #   39653661333566323862663238373738663234383162613937393432613561383231363430313930
        #   6465646531383561640a646661613664356262663434303438313039616434373336613331323265
        #   6437
    - role: devsec.hardening.ssh_hardening
      vars:
        os_immutable_fs: true
# - name: Add VPN
#   hosts: picoreos_hosts:dynamically_created_hosts
#   gather_facts: true
#   remote_user: core
#   become: true
#   become_user: root
#   become_method: ansible.builtin.sudo
#   roles:
#     - role: nordvpn
#       vars:
#         nordvpn_openvpn_auth_txt_upper: !vault |
#           $ANSIBLE_VAULT;1.1;AES256
#           30356239336663323737323661613237336131643664306231316263323439396330393861386366
#           6166333065336561353035393633626538666630616263350a303066313866333534343863636133
#           37613130353761383062363264376535386337663666326563633263336134393530396463616462
#           3730646130656437370a653434323037656365633564383232353837313265313039653730346465
#           39353338366334336635666166303961326535656565636231633639306438663164
#         nordvpn_openvpn_auth_txt_lower: !vault |
#           $ANSIBLE_VAULT;1.1;AES256
#           37343364336161333235343133396130306663363363613938613732376139373165393539323535
#           3039646539303162316663643338353764356530656161360a656136383038303566346430616331
#           36656432646638313565333132633239353130653838306165356237623666373838386564636532
#           3264383162393332310a343731393334306630353932643330363261316465356636613263616437
#           63333964333564353639376131376637613261383239343832356364663165663163
#         # ansible_become_pass: !vault |
#         #   $ANSIBLE_VAULT;1.1;AES256
#         #   33653166616232343661613064353065313564613465333262373866643666613065326264306662
#         #   3663613134613038356532333861353032633238653430650a393164383264333962393266376235
#         #   39653661333566323862663238373738663234383162613937393432613561383231363430313930
#         #   6465646531383561640a646661613664356262663434303438313039616434373336613331323265
#         #   6437
#   post_tasks:
#     - name: Remove python
#       become: true
#       become_user: root
#       community.general.rpm_ostree_pkg:
#         name: "{{ ansible_required_packages }}"
#         state: absent
#     - name: Check if user is in sudo group
#       ansible.builtin.raw: groups {{ ansible_ssh_user }} | grep sudo
#       register: insudogrp
#       ignore_errors: true
#     # - name: Remove user from sudo group
#     #   ansible.builtin.raw: "sudo gpasswd -d {{ ansible_become_user }} sudo"
#     #   when: insudogrp.failed is false
#             # - name: Set motion_user shell
#             #   become: true
#             #   become_user: root
#             #   ansible.builtin.shell:
#             #     cmd: sudo usermod motion_user -s /sbin/nologin
#             #   delegate_to: "{{ get_set_ip_remote_ip }}"
#             # - name: Reboot remote and wait for it to restart
#             #   become: true
#             #   become_user: root
#             #   ansible.builtin.reboot:
#             #     msg: "Reboot initiated by Ansible"
#             #     connect_timeout: 5
#             #     reboot_timeout: 600
#             #     pre_reboot_delay: 0
#             #     post_reboot_delay: 5
#             #     test_command: whoami
#             #   delegate_to: "{{ get_set_ip_remote_ip }}"

#         # # set get_set_ip_remote_ip in vars/main.yaml and run following command for non interactive run
#         # # if you know what the ip address will be and want to avoid ssh_known check (insecure!)
#         # # ansible-playbook "{{ hostvars['localhost']['get_set_ip_remote_ip'] }}"_pb.yaml --ask-become-pass --ssh-common-args='-o StrictHostKeyChecking=no'
